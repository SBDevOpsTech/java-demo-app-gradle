name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  ACR_IMAGE: ${{ ACR_NAME }}.azurecr.io/java-demoapp:latest

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure CLI script
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az acr login --name ${{ ACR_NAME }}

    # Step 3: Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t $ACR_IMAGE .

    # Step 5: Push Docker image to Azure Container Registry
    - name: Push Docker Image to ACR
      run: |
        docker push $ACR_IMAGE

  # deploy:
  #   name: Deploy to Dev
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: development
  #   steps:
  #   # Step 1: Log in to Azure
  #   - name: Log in to Azure
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   # Step 2: Get AKS kubeconfig
  #   - name: Get AKS Kubeconfig
  #     run: |
  #       az aks get-credentials --resource-group ${{ AKS_RESOURCE_GROUP }} --name ${{ AKS_CLUSTER_NAME }} --overwrite-existing

  #   # Step 3: Deploy to Kubernetes
  #   - name: Deploy to Kubernetes
  #     run: |
  #       kubectl apply -f k8s/deployment.yaml
  #       kubectl apply -f k8s/service.yaml